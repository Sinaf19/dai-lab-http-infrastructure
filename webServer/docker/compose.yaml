services:

  reverse_proxy:
    image: traefik:2.3.0
    command:
      - --log.level=DEBUG
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --providers.docker

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    labels:
      traefik.http.routers.dash.rule: Host(`dash.localhost`)
      traefik.http.routers.dash.service: api@internal

    ports:
      - '80:80'


  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.localhost`)
      traefik.http.routers.portainer.entrypoints: web
      traefik.http.services.portainer.loadbalancer.server.port: 9000

    depends_on:
      - reverse_proxy


  website:
    build: ./website
    # container_name: web_static_website
    labels:
      traefik.enable: true
      traefik.http.routers.website.rule: Host(`localhost`)
    deploy:
      replicas: 2
    depends_on:
      - reverse_proxy

  web_api:
    build: ./api
    # container_name: web_api_container
    labels:
      traefik.enable: true
      traefik.http.routers.web_api.rule: Host(`localhost`) && PathPrefix(`/api`)
      traefik.http.services.web_api.loadBalancer.sticky.cookie: true
      traefik.http.services.web_api.loadBalancer.sticky.cookie.name: web_api_cookie
    deploy:
      replicas: 2
    depends_on:
      - reverse_proxy
