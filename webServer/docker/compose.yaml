services:

  reverse_proxy:
    image: traefik:2.8.0

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mounting the certificate and the key
      - ./cert:/etc/traefik/certificates
      # Mounting the configuration file
      - ./traefik.yaml:/etc/traefik/traefik.yaml

    labels:
      traefik.http.routers.dash.entrypoints: "websecure"
      traefik.http.routers.dash.rule: Host(`dash.localhost`)
      traefik.http.routers.dash.tls: true

    ports:
      - '80:80'
      - '443:443'

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    labels:
      traefik.enable: true
      traefik.http.routers.portainer.rule: Host(`portainer.localhost`)
      traefik.http.routers.portainer.entrypoints: "websecure"
      traefik.http.services.portainer.loadbalancer.server.port: 9000
      traefik.http.routers.portainer.tls: true

    depends_on:
      - reverse_proxy

  website:
    build: ./website
    labels:
      traefik.enable: true
      traefik.http.routers.website.entrypoints: "websecure"
      traefik.http.routers.website.rule: Host(`localhost`)
      traefik.http.routers.website.tls: true
    deploy:
      replicas: 2
    depends_on:
      - reverse_proxy

  web_api:
    build: ./web_api
    labels:
      traefik.enable: true
      traefik.http.routers.web_api.entrypoints: "websecure"
      traefik.http.routers.web_api.rule: Host(`localhost`) && PathPrefix(`/api`)
      traefik.http.services.web_api.loadBalancer.sticky.cookie: true
      traefik.http.services.web_api.loadBalancer.sticky.cookie.name: web_api_cookie
      traefik.http.routers.web_api.tls: true
    deploy:
      replicas: 2
    depends_on:
      - reverse_proxy
